# -*- mode: ruby -*-
# # vi: set ft=ruby :

Vagrant.require_version ">= 1.6.0"

# Defaults for config options defined in CONFIG
$num_instances = ENV["NODES_COUNT"].to_i
$node_names = ENV["NODE_NAMES"].split(",")
$ip_addresses = ENV["IP_ADDRESSES"].split(",")
$share_home = false
$shared_folder = ENV["SHARED_FOLDER"]
$target_shared_folder = ENV["TARGET_SHARED_FOLDER"]
$vm_gui = false
$vm_memory = ENV["VM_MEMORY"].to_i
$vm_cpus = ENV["VM_CPUS"].to_i
$forwarded_ports = {}

# Attempt to apply the deprecated environment variable NUM_INSTANCES to
# $num_instances while allowing config.rb to override it
if ENV["NUM_INSTANCES"].to_i > 0 && ENV["NUM_INSTANCES"]
  $num_instances = ENV["NUM_INSTANCES"].to_i
end

# Use old vb_xxx config variables when set
def vm_gui
  $vb_gui.nil? ? $vm_gui : $vb_gui
end

def vm_memory
  $vb_memory.nil? ? $vm_memory : $vb_memory
end

def vm_cpus
  $vb_cpus.nil? ? $vm_cpus : $vb_cpus
end

Vagrant.configure("2") do |config|
  # always use Vagrants insecure key

  config.vm.provision "shell", inline: <<-SHELL
    sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    sed -i 's/#PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config
    service sshd restart
  SHELL
  config.ssh.username = 'vagrant'
  config.ssh.insert_key = false
  # config.ssh.private_key_path = ENV["PRIVATE_KEY_PATH"]

  # ssh_pub_key = File.readlines(ENV["PUBLIC_KEY_PATH"]).first.strip
  # config.vm.provision 'shell', inline: 'mkdir -p /root/.ssh'
  # config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /root/.ssh/authorized_keys"
  # config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys", privileged: false

  config.vm.box = ENV["VM_BOX"]
  # Prevent Vagrant from mounting the default /vagrant synced folder
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.synced_folder $shared_folder, $target_shared_folder, create: true, type: "rsync"

  # enable hostmanager
  # config.hostmanager.enabled = true

  # configure the host's /etc/hosts
  # config.hostmanager.manage_host = true

  (1..$num_instances).each do |i|
    config.vm.define vm_name = "%s-%02d" % [$node_names[(i-1)], i] do |config|
      config.vm.hostname = vm_name
      # foward Docker registry port to host for node 01
      # if i == 1
      #   config.vm.network :forwarded_port, guest: 5000, host: 5000
      # end

      config.vm.provider :virtualbox do |vb|
        vb.gui = vm_gui
        vb.memory = vm_memory
        vb.cpus = vm_cpus
      end
      config.vm.provider "vmware_desktop" do |v|
        v.vmx["memsize"] = vm_memory
        v.vmx["numvcpus"] = vm_cpus
      end

      ip = $ip_addresses[i-1]
      config.vm.network :private_network, ip: ip

    end
  end
end